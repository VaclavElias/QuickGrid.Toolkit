@typeparam TGridItem
<div class="mx-2">
    @if (IsLoading)
    {
        <small class="ms-3">Loading..</small>
    }
    else
    {
        <ColumnSelector @bind-Visible="IsColumnItemsSelection" ColumnManager="ColumnManager" SelectionChanged="RefreshDataAsync" />
        <div class="d-flex justify-content-between">
            <div class="d-flex align-items-baseline">
                @if (IsToolbar)
                {
                    if (IsColumnSelection)
                    {
                        <div class="dropdown me-2">
                            <span class="action me-2" data-bs-toggle="dropdown" aria-expanded="false">@IconProvider.Render(QuickGridIcon.ColumnLayout)</span>
                            <ul class="dropdown-menu">
                                <li>
                                    <button @onclick="ResetViewToDefault" class="dropdown-item">
                                        @if (SelectedConfiguration is null)
                                        {
                                            @IconProvider.Render(QuickGridIcon.Tick)
                                        } else
                                        {
                                            @IconProvider.Render(QuickGridIcon.EmptyIcon)
                                        }<span>Default</span>
                                    </button>
                                </li>
                                @foreach (var item in ColumnConfigurations)
                                {
                                    <li>
                                        <button @onclick="() => SelectView(item)" class="dropdown-item">
                                            @if (item.Id == SelectedConfiguration?.Id)
                                            {
                                                @IconProvider.Render(QuickGridIcon.Tick)
                                            }
                                            else
                                            {
                                                @IconProvider.Render(QuickGridIcon.EmptyIcon)
                                            }
                                            @item.Name
                                        </button>
                                    </li>
                                }
                                <li><hr class="dropdown-divider"></li>
                                <li><button @onclick="ManageColumns" class="dropdown-item">@IconProvider.Render(QuickGridIcon.Wrench) Manage Columns</button></li>
                            </ul>
                        </div>
                    }
                    <div class="dropdown">
                        <span class="action me-2" data-bs-toggle="dropdown" aria-expanded="false">@IconProvider.Render(QuickGridIcon.Settings)</span>
                        <ul class="dropdown-menu">
                            <li><button class="dropdown-item" @onclick="ManageColumns">@IconProvider.Render(QuickGridIcon.Wrench) Manage Columns</button></li>
                            <li><button class="dropdown-item" @onclick="EnableExactMatch">@IconProvider.Render(QuickGridIcon.Search) Enable Exact Match</button></li>
                            @if (IsExportEnabled)
                            {
                                <li>
                                    <button class="dropdown-item" @onclick="ExportAsync">
                                        @IconProvider.Render(QuickGridIcon.Export) Export CSV
                                    </button>
                                </li>
                                <li>
                                    <button class="dropdown-item" @onclick="ExportSelectedColumnsAsync">
                                        @IconProvider.Render(QuickGridIcon.ExportSelected) Export CSV Selected Columns <span style="line-height:19px" class="px-1 ms-1 text-bg-warning small">Preview</span>
                                    </button>
                                </li>
                            }
                        </ul>
                    </div>
                    @if (FilterSection != null && IsFilter)
                    {
                        <span @onclick="ToggleFilterSection" class="action ms-1 me-2">@IconProvider.Render(QuickGridIcon.Filter)</span>
                    }
                    @if (_isInMemorySearch)
                    {
                        <input @bind="_searchQuery" @bind:event="oninput" @bind:after="OnInMemorySearchChanged" placeholder="quick search.." type="search" class="d-inline-block py-0 mb-1 ms-1 form-control form-control-sm border-0 quick-search" style="width: 200px" />
                        if (!string.IsNullOrEmpty(_searchQuery))
                        {
                            <span class="small text-muted ms-2">(@_filteredItems?.Count()) Results</span>
                        }
                        if (ExactMatch)
                        {
                            <span @onclick="DisableExactMatch" class="badge bg-info text-dark ms-2 action">Exact Match âœ–</span>
                        }
                    }
                    else
                    {
                        <input @bind:get="_searchQuery" @bind:set="(value) => SearchTextChanged(value)" placeholder="type & hit ENTER.." type="search" class="d-inline-block py-0 mb-1 ms-1 form-control form-control-sm border-0 me-1 quick-search" style="width: 200px" disabled="@IsLoading" />
                        <button @onclick="ClearSearch" class="btn btn-primary btn-xs" disabled="@IsLoading">Clear Search</button>

                    }
                }
                @if (IsSelection && _selectedItemsCount > 0)
                {
                    <div class="">
                        <button @onclick="UnselectAllItems" class="btn btn-light btn-xs ms-4" type="button">Unselect All</button>
                        <div class="dropdown d-inline-block ms-2">
                            <button class="btn btn-success dropdown-toggle btn-xs" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                @_selectedItemsCount SELECTED
                            </button>
                            <ul class="dropdown-menu">
                                @SelectedItemsActionDropDown
                            </ul>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
</div>
@if (_showFilterSection)
{
    @FilterSection
}
<QuickGrid @ref="_grid" Items="@_filteredItems" Class="@GetTableClass()" Theme="twentyAI" Pagination="@_pagination" id="@Id" ItemKey="ItemKey">
    @QuickGridColumns.Columns(UsedColumnManager)
</QuickGrid>
@if (IsPaginator && _pagination != null)
{
    <Paginator State="@_pagination" />
}