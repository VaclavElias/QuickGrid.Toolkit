@page "/users-grid"
<PageTitle>Users Grid</PageTitle>
<h1>Users Grid</h1>
<div class="my-3">
    <ColumnSelector ColumnManager="_columnManager" SelectionChanged="SelectionChangedAsync" />
</div>
<QuickGrid @ref="_grid" Items="@_items.AsQueryable()" Class="table table-sm table-index table-striped small table-fit table-thead-sticky mb-0" Theme="twentyAI">
    @QuickGridColumns.Columns(_columnManager)
</QuickGrid>

@code {
    private List<UserDto> _items = new();
    private ColumnManager<UserDto> _columnManager = new();
    private QuickGrid<UserDto>? _grid;

    protected override void OnInitialized()
    {
        var sharedManager = new SharedUserColumnManager();

        _columnManager.AddIndexColumn();
        _columnManager.Add(new() { Property = p => p.Id });
        _columnManager.AddSimple(p => p.Name, fullTitle: "Name");
        _columnManager.AddRange(sharedManager.Columns);
        _columnManager.AddToggleColumn(p => p.RemoteWorking, "Remote", fullTitle: "Remote Working", onChange: ToggleChange);
        _columnManager.AddCountry();

        _items = UserService.GetUsers();
    }

    private async Task SelectionChangedAsync()
    {
        if (_grid is null) return;

        await _grid.RefreshDataAsync();
    }

    private async Task ToggleChange(UserDto user)
    {
        user.RemoteWorking = !user.RemoteWorking;

        await Task.CompletedTask;

        StateHasChanged();
    }
}