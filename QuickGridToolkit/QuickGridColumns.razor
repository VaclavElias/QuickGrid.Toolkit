@code {
    //public static RenderFragment Columns<TGridItem>(ColumnManager<TGridItem> columnManager, Func<ColumnBase<TGridItem>, SortDirection, Task> sortAction), @onclick="@(() => sortAction(context, SortDirection.Auto))
    public static RenderFragment Columns<TGridItem>(ColumnManager<TGridItem> columnManager)
        => @<text>
        @foreach (var col in columnManager.Get())
        {
            if (col.ColumnType == typeof(EmptyColumn<TGridItem>))
            {
                <EmptyColumn TGridItem="TGridItem" Title="@col.Title" Align="@col.Align">
                    <i></i>
                </EmptyColumn>
            }
            else if (col.ColumnType == typeof(ImageColumn<TGridItem>))
            {
                <ImageColumn TGridItem="TGridItem" Title="@col.Title"
                             Align="@col.Align"
                             Class="@col.Class"
                             Property="@col.Property" />
            }
            else if (col.ColumnType == typeof(TickColumn<TGridItem>))
            {
                <TickColumn TGridItem="TGridItem" Title="@col.Title"
                            Align="@col.Align"
                            Class="@col.Class"
                            Property="@col.Property"
                            Sortable="true" />
            }
            else if (col.ColumnType == typeof(TemplateColumn<TGridItem>))
            {
                <TemplateColumn TGridItem="TGridItem" Title="@col.Title"
                                Align="@col.Align"
                                SortBy="@col.SortBy"
                                Class="@col.Class">
                    <ChildContent>@col.ChildContent(context)</ChildContent>
                    <HeaderTemplate>test2</HeaderTemplate>
                </TemplateColumn>
            }
            else
            {
            // Format="@col.Format" is not working, causing Blazor to crash
                <PropertyColumn Title="@col.Title"
                                Align="@col.Align"
                                Class="@col.Class"
                                Property="@col.Property"
                                Sortable="true">
                    <HeaderTemplate>
                <button class="col-title" type="button">
                            <div class="col-title-text">@col.Title</div>
                            <div class="sort-indicator" aria-hidden="true"></div>
                        </button>
                    </HeaderTemplate>
                </PropertyColumn>
            }
        }
    </text>;

    // Not working, eventually, I would like to pass a call back function instead of using Test()
    // Also, it can't be static
    // Error: System.InvalidOperationException: The render handle is not yet assigned. This happens because of @onclick handler
    // Temporary solution, move the GetActionColumn to a "QuickGridPageBase" and inherid this page and so this method will be available for the child pages to be reused
    public RenderFragment<TGridItem> GetActionColumn<TGridItem>(Expression<Func<TGridItem, object?>> property)
    {
        var propertyName = (property.Body as MemberExpression)?.Member.Name;
        var propertyGetter = property.Compile();

        return (context) => @<span @onclick="@(() => Test())" class="text-info">@propertyGetter(context)</span>;

        void Test()
        {
            Console.WriteLine("Hello World");
        }
    }

    public static RenderFragment MarkupColumn(MarkupString markupString) => @<text>@markupString</text>;
}