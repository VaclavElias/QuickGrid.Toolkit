@typeparam TGridItem
@if (ColumnManager != null && Visible)
{
    <div class="">
        @foreach (var col in ColumnManager.Columns)
        {
            <div class="form-check form-check-inline">
                <input type="checkbox" @bind="col.Visible" @bind:after="HandleChangeAsync" id="@col.ColumnId" class="form-check-input" />
                <label class="form-check-label" for="@col.ColumnId">@col.FullTitle</label>
            </div>
        }
        <p class="mt-1">
            <small class="text-secondary text-decoration-underline action" @onclick="UncheckAll">Uncheck all</small>
            @* <small>Drag and drop to reorder columns</small> *@
        </p>
    </div>
}
@code {
    [Parameter] public bool Visible { get; set; } = true;
    [Parameter] public ColumnManager<TGridItem>? ColumnManager { get; set; }
    [Parameter] public EventCallback SelectionChanged { get; set; }

    private Task HandleChangeAsync() => SelectionChanged.InvokeAsync();

    private void UncheckAll()
    {
        foreach (var col in ColumnManager.Columns)
        {
            col.Visible = false;
        }

        SelectionChanged.InvokeAsync();
    }
}